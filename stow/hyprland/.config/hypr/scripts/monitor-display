#!/bin/bash

# Define your laptop monitor name and common external monitor names
# You MUST get these exact names from `hyprctl monitors all`
LAPTOP_MONITOR="LVDS-1"     # Replace with your laptop's actual name
EXTERNAL_MONITOR="HDMI-A-1" # Replace with your external monitor's actual name
EXTERNAL_MONITOR_2="DP-1"   # Add more if you have multiple external displays

# --- Function to apply monitor settings ---
apply_monitor_config() {
  local config="$1"
  echo "Applying: $config"
  hyprctl --batch "$config"
}

# --- Get current monitor status ---
# This is a basic check. For more robust detection, parse `hyprctl monitors all` output.
# For simplicity, we assume if EXTERNAL_MONITOR exists, it's connected.
EXTERNAL_CONNECTED=$(hyprctl monitors | grep "$EXTERNAL_MONITOR")
EXTERNAL_2_CONNECTED=$(hyprctl monitors | grep "$EXTERNAL_MONITOR_2")

# --- Define menu options ---
# Each option will have a display name and a command string for hyprctl
declare -A options
options["Laptop Only"]="monitor=$LAPTOP_MONITOR,preferred,auto,1; monitor=$EXTERNAL_MONITOR,disable; monitor=$EXTERNAL_MONITOR_2,disable"
options["Mirror ($LAPTOP_MONITOR to $EXTERNAL_MONITOR)"]="monitor=$LAPTOP_MONITOR,preferred,auto,1; monitor=$EXTERNAL_MONITOR,preferred,auto,1,mirror,$LAPTOP_MONITOR; monitor=$EXTERNAL_MONITOR_2,disable"
options["Extend Right ($LAPTOP_MONITOR + $EXTERNAL_MONITOR)"]="monitor=$LAPTOP_MONITOR,preferred,0x0,1; monitor=$EXTERNAL_MONITOR,preferred,$(hyprctl monitors | grep "$LAPTOP_MONITOR" | awk '{print $3}' | cut -d'x' -f1)x0,1; monitor=$EXTERNAL_MONITOR_2,disable"
options["External Only ($EXTERNAL_MONITOR)"]="monitor=$LAPTOP_MONITOR,disable; monitor=$EXTERNAL_MONITOR,preferred,0x0,1; monitor=$EXTERNAL_MONITOR_2,disable"

# Add options for second external monitor if connected
if [[ -n "$EXTERNAL_2_CONNECTED" ]]; then
  options["Extend Right ($LAPTOP_MONITOR + $EXTERNAL_2_CONNECTED)"]="monitor=$LAPTOP_MONITOR,preferred,0x0,1; monitor=$EXTERNAL_MONITOR_2,preferred,$(hyprctl monitors | grep "$LAPTOP_MONITOR" | awk '{print $3}' | cut -d'x' -f1)x0,1; monitor=$EXTERNAL_MONITOR,disable"
  options["Extend Left ($EXTERNAL_2_CONNECTED + $LAPTOP_MONITOR)"]="monitor=$LAPTOP_MONITOR,preferred,$(hyprctl monitors | grep "$EXTERNAL_2_CONNECTED" | awk '{print $3}' | cut -d'x' -f1)x0,1; monitor=$EXTERNAL_MONITOR_2,preferred,0x0,1; monitor=$EXTERNAL_MONITOR,disable"
  options["Mirror ($LAPTOP_MONITOR to $EXTERNAL_2_CONNECTED)"]="monitor=$LAPTOP_MONITOR,preferred,auto,1; monitor=$EXTERNAL_MONITOR_2,preferred,auto,1,mirror,$LAPTOP_MONITOR; monitor=$EXTERNAL_MONITOR,disable"
  options["External Only ($EXTERNAL_2_CONNECTED)"]="monitor=$LAPTOP_MONITOR,disable; monitor=$EXTERNAL_MONITOR_2,preferred,0x0,1; monitor=$EXTERNAL_MONITOR,disable"
fi

# --- Check if external monitor is connected before offering relevant options ---
if [[ -z "$EXTERNAL_CONNECTED" && -z "$EXTERNAL_2_CONNECTED" ]]; then
  menu_options="Laptop Only"
else
  # Dynamically build menu options based on connected monitors
  menu_options="Laptop Only\n"

  if [[ -n "$EXTERNAL_CONNECTED" ]]; then
    menu_options+="Mirror ($LAPTOP_MONITOR to $EXTERNAL_MONITOR)\n"
    menu_options+="Extend Right ($LAPTOP_MONITOR + $EXTERNAL_MONITOR)\n"
    menu_options+="External Only ($EXTERNAL_MONITOR)\n"
  fi

  if [[ -n "$EXTERNAL_2_CONNECTED" ]]; then
    menu_options+="Extend Right ($LAPTOP_MONITOR + $EXTERNAL_2_CONNECTED)\n"
    menu_options+="Extend Left ($EXTERNAL_2_CONNECTED + $LAPTOP_MONITOR)\n"
    menu_options+="Mirror ($LAPTOP_MONITOR to $EXTERNAL_2_CONNECTED)\n"
    menu_options+="External Only ($EXTERNAL_2_CONNECTED)\n"
  fi
fi

# --- Present menu to user ---
chosen_option=$(echo -e "$menu_options" | rofi -dmenu -p "Monitor Setup")

# --- Execute selected option ---
if [[ -n "$chosen_option" ]]; then
  if [[ -v options["$chosen_option"] ]]; then # Check if the chosen option exists in our map
    apply_monitor_config "${options["$chosen_option"]}"
  else
    echo "Error: Invalid option selected." >&2
  fi
else
  echo "No option selected. Exiting." >&2
fi
